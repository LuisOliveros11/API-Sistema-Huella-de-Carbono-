// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int    @id @default(autoincrement())
  nombre     String @db.VarChar(255)
  correo     String @unique @db.VarChar(255)
  contrasena String @db.VarChar(255)

  respuestas           Respuesta[]
  emisionCategorias    EmisionCategoria[]
  huellaCarbono        HuellaCarbono[]
  recomendacionUsuario RecomendacionUsuario[]
}

model Pregunta {
  id        Int    @id @default(autoincrement())
  codigo    String @unique @db.VarChar(255)
  texto     String @db.Text
  categoria String @db.VarChar(255)

  respuestas Respuesta[]
}

model Respuesta {
  id         Int      @id @default(autoincrement())
  usuarioId  Int
  preguntaId Int
  valor      Decimal  @db.Decimal(10, 4)
  createdAt  DateTime @default(now())

  usuario  User     @relation(fields: [usuarioId], references: [id])
  pregunta Pregunta @relation(fields: [preguntaId], references: [id])

  // evitar duplicados usuario+pregunta
  @@unique([usuarioId, preguntaId])
}

model EmisionCategoria {
  id             Int      @id @default(autoincrement())
  usuarioId      Int
  categoria      String   @db.VarChar(255)
  totalEmisiones Decimal  @db.Decimal(10, 4)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  usuario User @relation(fields: [usuarioId], references: [id])

  @@unique([usuarioId, categoria])
}

model HuellaCarbono {
  id               Int     @id @default(autoincrement())
  usuarioId        Int
  emisionesTotales Decimal @db.Decimal(10, 4)

  usuario User @relation(fields: [usuarioId], references: [id])
}

model Recomendacion {
  id             Int      @id @default(autoincrement())
  titulo         String   @db.VarChar(255)
  descripcion    String   @db.Text
  categoria      String   @db.VarChar(255)
  dificultad     String   @db.VarChar(255)
  preguntaCodigo String?  @db.VarChar(255)
  limite         Decimal? @db.Decimal(10, 4)
  operador       String?  @db.VarChar(10)
  activo         Boolean  @default(true)

  recomendacionUsuario RecomendacionUsuario[]
}

model RecomendacionUsuario {
  id              Int      @id @default(autoincrement())
  usuarioId       Int
  recomendacionId Int
  createdAt       DateTime @default(now())

  usuario       User          @relation(fields: [usuarioId], references: [id], onDelete: Cascade)
  recomendacion Recomendacion @relation(fields: [recomendacionId], references: [id])

  @@unique([usuarioId, recomendacionId])
}
